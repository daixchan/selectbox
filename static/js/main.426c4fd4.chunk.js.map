{"version":3,"sources":["Footer.jsx","logo.svg","Header.jsx","useClickOutside.js","SelectBox.jsx","App.js","reportWebVitals.js","index.js"],"names":["Footer","Header","src","logo","className","alt","useClickOutside","ref","handler","listener","e","current","contains","target","useEffect","document","addEventListener","removeEventListener","SelectBox","options","initValue","useState","label","setLabel","isActivated","setIsActivated","useRef","SelectWrapper","onClick","Select","Text","Arrow","OptionWrapper","initial","animate","variants","spread","opacity","rotateX","transition","type","stiffness","damping","display","fold","duration","transitionEnd","map","option","Option","value","styles","border","select","background","default","hover","text","active","arrow","styled","motion","div","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.426c4fd4.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Footer() {\n  return (\n    <footer>\n      <p>&copy; David 2021</p>\n    </footer>\n  );\n}","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport logo from './logo.svg';\n\nexport default function Header() {\n  return (\n    <header>\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h1>SelectBox</h1>\n    </header>\n  );\n}","import { useEffect } from \"react\";\n\nconst useClickOutside = (ref, handler) => {\n  const listener = (e) => {\n    if (ref.current && !ref.current.contains(e.target)) {\n      handler();\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"click\", listener);\n    document.addEventListener(\"mousedown\", listener);\n    document.addEventListener(\"touchstart\", listener);\n\n    return () => {\n      document.removeEventListener(\"click\", listener);\n      document.removeEventListener(\"mousedown\", listener);\n      document.removeEventListener(\"touchstart\", listener);\n    };\n  });\n};\n\nexport default useClickOutside;","import React, {useState, useRef} from \"react\";\nimport styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\nimport useClickOutside from \"./useClickOutside\";\n\nconst SelectBox = ({options, initValue = 0}) => {\n  const [label, setLabel] = useState(options[initValue].label)\n  const [isActivated, setIsActivated] = useState(false)\n  const ref = useRef()\n  useClickOutside(ref, () => setIsActivated(false))\n  const optionWrapperVariants = {\n    spread: {\n      opacity: 1,\n      rotateX: 0,\n      transition: {\n        type: \"spring\",\n        stiffness: 800,\n        damping: 16\n      },\n      display: \"initial\"\n    },\n    fold: {\n      opacity: 0,\n      rotateX: -30,\n      transition: {\n        duration: 0.2\n      },\n      transitionEnd: {\n        display: \"none\"\n      }\n    }\n  };\n  return (\n    <SelectWrapper ref={ref} onClick={() => setIsActivated(!isActivated)}>\n      <Select>\n        <Text>{label}</Text>\n        <Arrow />\n      </Select>\n      <OptionWrapper initial=\"fold\" animate={isActivated ? \"spread\" : \"fold\"} variants={optionWrapperVariants}>\n        {options.map((option) => (\n        <Option key={option.value} onClick={() => setLabel(option.label)} className={option.label === label ? \"active\" : \"\"}>\n          <Text>{option.label}</Text>\n        </Option>\n        ))}\n      </OptionWrapper>\n    </SelectWrapper>\n  );\n}\nexport default SelectBox\n\nconst styles = {\n  width: \"158px\",\n  colors: {\n    border: \"#dddddd\",\n    select: {\n      background: {\n        default: \"#ffffff\",\n        hover: \"#f5f5f5\",\n      },\n      text: {\n        default: \"#323232\",\n        hover: \"#252525\",\n      }\n    },\n    option: {\n      background: {\n        default: \"#ffffff\",\n        hover: \"#f5f5f5\",\n        active: \"#e6f7ff\",\n      },\n      text: {\n        default: \"#323232\",\n        hover: \"#252525\",\n        active: \"#000000\",\n      }\n    },\n    arrow: {\n      default: \"#bfbfbf\",\n      hover: \"#252525\",\n    }\n  },\n  transition: {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 30\n  }\n}\n\nconst SelectWrapper = styled(motion.div)`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  width: ${styles.width};\n  perspective: 1000px;\n  cursor: pointer;\n`\n\nconst Select = styled.div`\n  display: flex;\n  flex: 1 0 auto;\n  align-items: center;\n  padding: 8px;\n  transition: color 200ms;\n  border: 1px solid ${styles.colors.border};\n  border-radius: 2px;\n\n  ${SelectWrapper}:hover & {\n    color: ${styles.colors.select.text.hover};\n  }\n`\n\nconst Arrow = styled.div`\n  position: absolute;\n  left: auto;\n  right: 8px;\n\n  &:before,\n  &:after {\n    content: \"\";\n    position: absolute;\n    right: 0;\n    width: 8px;\n    height: 1px;\n    border-radius: 3px;\n    background: ${styles.colors.arrow.default};\n  }\n\n  &:before {\n    transform: translateX(-100%) translateX(3px) rotate(45deg);\n  }\n\n  &:after {\n    transform: rotate(-45deg);\n  }\n`\n\nconst OptionWrapper = styled(motion.div)`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  top: 100%;\n  left: 0;\n  min-width: 100%;\n\n  background: #ffffff;\n  border-radius: 2px;\n  overflow: hidden;\n  backface-visibility: hidden;\n  box-shadow: 0 3px 6px -4px rgba(0, 0, 0, 0.12), 0 6px 16px 0 rgba(0, 0, 0, 0.08), 0 9px 28px 8px rgba(0, 0, 0, 0.05);\n  transform-origin: 50% -30px;\n`\n\nconst Option = styled.div`\n  padding: 8px;\n  white-space: nowrap;\n  animation-fill-mode: forwards;\n\n  transition: background 300ms, color 300ms;\n  color: ${styles.colors.option.text.default};\n  &:hover {\n    background: ${styles.colors.option.background.hover};\n    color: ${styles.colors.option.text.hover};\n  }\n  &.active {\n    background: ${styles.colors.option.background.active};\n    color: ${styles.colors.option.text.active};\n  }\n`\n\nconst Text = styled.div`\n  font-size: 12px;\n  flex: 1 0 auto;\n  font-family: 나눔고딕, open sans, sans-serif;\n  text-transform: uppercase;\n`","import './App.css';\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\nimport SelectBox from \"./SelectBox\";\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <main>\n        <section>\n          <SelectBox options = {[\n            { label: \"더기프팅컴퍼니\", value: \"0\" },\n            { label: \"월간가슴\", value: \"1\" },\n            { label: \"인더웨어\", value: \"2\" },\n            { label: \"프론트엔드 엔지니어\", value: \"3\" }\n          ]} initValue = {1} />\n        </section>\n      </main>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}